"0","load(""02-stm-data.RData"")"
"0",""
"0","# create functions to tidy stm output and plot"
"0",""
"0","plot_stm_beta <- function(topic_model) {"
"0","  # suppress messages from following code block"
"0","  suppressMessages({"
"0","    # create dataframe with topic and beta weight"
"0","    td_beta <- broom::tidy(topic_model)"
"0","    "
"0","    # grab top 10 words associated with each topic"
"0","    plotting_data <- "
"0","      td_beta%>% "
"0","      group_by(topic) %>% "
"0","      top_n(10) %>% "
"0","      ungroup %>% "
"0","      mutate(topic = factor(paste(""Topic"", topic)),"
"0","             term  = reorder_within(term, beta, within = topic)) "
"0","    })"
"0","  "
"0","  # create plot of each topic and associated words"
"0","  beta_plot <- "
"0","    ggplot(plotting_data, aes(term, beta, fill = topic)) +"
"0","    geom_col(alpha = 0.7, show.legend = FALSE) +"
"0","    facet_wrap(~ topic, scales = ""free_y"") +"
"0","    scale_fill_manual(values = pal) +"
"0","    scale_x_reordered() +"
"0","    coord_flip() +"
"0","    ylab(""Importance"") +"
"0","    xlab(""Term"") +"
"0","    theme_pubclean(base_family = ""Century"")"
"0","  "
"0","  # print plot out"
"0","  return(beta_plot)"
"0","}"
"0",""
"0","plot_stm_gamma <- function(topic_model) {"
"0","  # create dataframe with topic and gamma weight"
"0","  td_gamma <- broom::tidy(topic_model,"
"0","                          matrix = ""gamma"","
"0","                          document_names = rownames(tweets_dfm))"
"0","  "
"0","  # grab probabilites that each topic is "
"0","  # associated with X number of languages"
"0","  plotting_data <-"
"0","    td_gamma %>%"
"0","    mutate(topic = factor(paste(""Topic"", topic)))"
"0","  "
"0","  # create plot"
"0","  gamma_plot <- "
"0","    ggplot(plotting_data, aes(gamma, fill = topic)) +"
"0","    geom_histogram(alpha = 0.7, show.legend = FALSE, bins = 30) +"
"0","    facet_wrap(~ topic) +"
"0","    scale_y_continuous(breaks = c(1,2, 3)) +"
"0","    scale_fill_manual(values = pal) +"
"0","    xlab(""Probability"") +"
"0","    ylab(""Number of Communities"") +"
"0","    theme_pubclean(base_family = ""Century"") +"
"0","    theme(axis.text.x = element_text())  "
"0","  # print plot"
"0","  return(gamma_plot)"
"0","}"
